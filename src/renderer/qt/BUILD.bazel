# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

load("@bazel_skylib//rules:build_test.bzl", "build_test")
load(
    "//:build_defs.bzl",
    "mozc_cc_binary",
    "mozc_cc_library",
)
load(
    "//bazel:qt.bzl",
    "mozc_cc_qt_library",
    "mozc_qt_moc",
)

package(default_visibility = ["//visibility:private"])

licenses(["notice"])

mozc_cc_binary(
    name = "mozc_renderer",
    srcs = ["qt_renderer_main.cc"],
    defines = ["ENABLE_QT_RENDERER"],
    visibility = ["//unix:__subpackages__"],
    deps = [
        ":qt_server",
        "//renderer:init_mozc_renderer",
    ],
)

mozc_qt_moc(
    name = "moc_qt_ipc_thread",
    srcs = ["qt_ipc_thread.h"],
    outs = ["out_qt_ipc_thread.cc"],
)

mozc_cc_qt_library(
    name = "qt_ipc_thread",
    srcs = [
        "qt_ipc_thread.cc",
        ":moc_qt_ipc_thread",
    ],
    hdrs = ["qt_ipc_thread.h"],
    deps = [
        ":qt_ipc_server",
        "@com_google_absl//absl/log",
    ],
)

mozc_qt_moc(
    name = "moc_qt_server",
    srcs = ["qt_server.h"],
    outs = ["out_qt_server.cc"],
)

mozc_cc_qt_library(
    name = "qt_server",
    srcs = [
        "qt_server.cc",
        ":moc_qt_server",
    ],
    hdrs = [
        "qt_server.h",
    ],
    deps = [
        ":qt_ipc_thread",
        ":qt_window_manager",
        "//base:port",
        "//base:system_util",
        "//base:vlog",
        "//client:client_interface",
        "//config:config_handler",
        "//ipc:named_event",
        "//protocol:config_cc_proto",
        "//protocol:renderer_cc_proto",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/log",
    ],
)

mozc_cc_library(
    name = "qt_ipc_server",
    srcs = [
        "qt_ipc_server.cc",
    ],
    hdrs = [
        "qt_ipc_server.h",
    ],
    deps = [
        "//base:system_util",
        "//ipc",
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
    ],
)

mozc_cc_qt_library(
    name = "qt_window_manager",
    srcs = [
        "qt_window_manager.cc",
    ],
    hdrs = [
        "qt_window_manager.h",
    ],
    deps = [
        "//base:coordinates",
        "//client:client_interface",
        "//protocol:candidate_window_cc_proto",
        "//protocol:commands_cc_proto",
        "//protocol:renderer_cc_proto",
        "//renderer:renderer_style_handler",
        "//renderer:window_util",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/strings",
    ],
)

build_test(
    name = "qt_build_test",
    target_compatible_with = ["@platforms//os:linux"],
    targets = [
        ":qt_ipc_server",
        ":qt_ipc_thread",
        ":qt_server",
        ":qt_window_manager",
    ],
)
